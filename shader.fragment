#version 300 es

precision highp float;

in vec2 pos;
out vec4 outColour;

uniform sampler2D u_texture;
uniform float u_time;
uniform vec2 u_resolution;

vec3 rainbow(in float t);
mat2 rotate(float angle);

void main() {
    vec2 uv = ((pos*u_resolution) / max(u_resolution.x,u_resolution.y))*vec2(1.0,-1.0);
    uv *= rotate(sin(u_time*0.05)*0.25);
    uv.x += u_time*0.025;

    vec3 colour = texture(u_texture,uv*0.75).rgb;
    float gray = smoothstep(1.5,0.0,(colour.x+colour.y+colour.z)/3.0);
    colour = rainbow(-u_time*0.05+gray+uv.x*0.05+uv.y*0.25);

    outColour = vec4(colour,1.0);
}

vec3 rainbow(in float t) {
    vec3 a = vec3(0.9);
    vec3 b = vec3(0.25);
    vec3 c = vec3(1.0);
    vec3 d = vec3(0.0,0.33,0.67);

    return a + b*cos(6.28318*(c*t+d));
}

mat2 rotate(float angle) {
    float s = sin(angle);
    float c = cos(angle);
    return mat2(c, -s, s, c);
}